import AnimatedText from "@/components/AnimatedText";
import { DragHandle, GithubIcon } from "@/components/Icons";
import Layout from "@/components/Layout";
import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";
import {
  DndContext,
  closestCenter,
  KeyboardSensor,
  PointerSensor,
  useSensor,
  useSensors,
  DragOverlay,
} from "@dnd-kit/core";
import {
  arrayMove,
  SortableContext,
  rectSortingStrategy,
  useSortable,
} from "@dnd-kit/sortable";
import { CSS } from "@dnd-kit/utilities";

import project1 from "../../public/images/projects/proj1.png";
import project2 from "../../public/images/projects/proj2.png";
import project3 from "../../public/images/projects/proj3.png";
import project4 from "../../public/images/projects/proj4.png";
import project5 from "../../public/images/projects/proj5.png";
import project6 from "../../public/images/projects/proj6.png";
import TransitionEffect from "@/components/TransitionEffect";

const DraggableProject = ({ id, title, type, image, link, github }) => {
  const {
    attributes,
    listeners,
    setNodeRef,
    transform,
    transition,
    isDragging,
  } = useSortable({
    id,
  });

  const style = {
    transform: CSS.Transform.toString(transform),
    transition: transition ? transition : "none",
  };

  return (
    <div
      ref={setNodeRef}
      className={`col-span-4 md:col-span-12 lg:col-span-6 relative `}
      style={style}
      {...attributes}
    >
      <div
        {...listeners}
        className=" absolute cursor-move p-2 top-0 right-0 w-10 h-10 z-20 drag-handle mr-3 "
      >
        <DragHandle />
      </div>
      <Project
        title={title}
        link={link}
        github={github}
        type={type}
        image={image}
        isDragging={isDragging}
      />
    </div>
  );
};

const Project = ({ title, type, image, link, github, isDragging }) => {
  return (
    <article
      className={`w-full h-full flex flex-col items-center xs:p-6 justify-center rounded-2xl border border-solid border-dark bg-light dark:bg-dark dark:border-light p-6 relative ${
        isDragging && "opacity-10 border-none"
      }`}
    >
      <div className="absolute top-0 md:-right-2 md:w-[101%] xs:h-[102%] xs-rounded-[1.5rem] -right-3 rounded-br-3xl -z-10 w-[101%] h-[103%] rounded-[2rem] bg-dark dark:bg-light"></div>

      <a
        className="w-full cursor-pointer overflow-hidden rounded-lg mt-3"
        href={link}
        target="_blank"
      >
        <Image
          src={image}
          alt={title}
          className="w-full  rounded-lg"
          priority={true}
          sizes="(max-width: 768px) 100vw , (max-width: 1200px) 50vw, 50vw"
        />
      </a>
      <div className="w-full flex flex-col items-start justify-between mt-4">
        <span className="text-primary dark:text-primaryDark font-medium text-xl lg:text-lg md:text-base">
          {type}
        </span>

        <a
          href={link}
          target="_blank"
          className="hover:underline underline-offset-2"
        >
          <h2 className="my-2 w-full text-left text-3xl font-bold lg:text-2xl ">
            {title}
          </h2>
        </a>
        <div className="w-full mt-2 flex items-center justify-between">
          <a href={link} className=" text-lg font-semibold md:text-base">
            Visit Project{" "}
          </a>
          <a href={github} target="_blank" className="w-10 md:w-6">
            <GithubIcon />
          </a>
        </div>
      </div>
    </article>
  );
};

function Projects() {
  const [activeId, setActiveId] = useState(null);
  const [items, setItems] = useState(getDefaultItems());
  function handleDragStart(event) {
    const { active } = event;

    setActiveId(active.id);
  }
  const onDragEnd = ({ active, over }) => {
    if (active.id !== over.id) {
      setItems((items) => {
        const oldIndex = items.findIndex((item) => item.id === active.id);
        const newIndex = items.findIndex((item) => item.id === over.id);

        return arrayMove(items, oldIndex, newIndex);
      });
    }
  };

  const sensors = useSensors(
    useSensor(PointerSensor),
    useSensor(KeyboardSensor, {
      coordinateGetter: (d) => d.eventTarget.getBoundingClientRect(),
    })
  );
  return (
    <>
      <Head>
        <title>Projects page - S.SATASIYA</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <TransitionEffect />
      <main className="mb-16 flex w-full dark:text-light dark:bg-dark flex-col items-center justify-center">
        <Layout className="pt-16">
          <AnimatedText
            text={"Imagination Trumps Knowledge!"}
            className="mb-16 lg:!text-7xl sm:mb-8 sm:!text-6xl xs:!text-4xl "
          />
          <DndContext
            sensors={sensors}
            collisionDetection={closestCenter}
            onDragEnd={onDragEnd}
            onDragStart={handleDragStart}
          >
            <SortableContext
              items={items.map((item) => item.id)}
              strategy={rectSortingStrategy}
            >
              <div className="grid grid-cols-12 gap-24 gap-y-32 xl:gap-x-16 lg:gap-x-8 md:gap-y-24 sm:gap-x-0 ">
                {items.map((item) => (
                  <DraggableProject key={item.id} {...item} />
                ))}
              </div>
            </SortableContext>
            <DragOverlay>
              {activeId
                ? items.map((item) =>
                    item.id === activeId ? (
                      <DraggableProject key={item.id} {...item} />
                    ) : null
                  )
                : null}
            </DragOverlay>
          </DndContext>
        </Layout>
      </main>
    </>
  );
}
function getDefaultItems() {
  return [
    {
      id: 1,
      title: "Uwindsor Demoday 2023 App",
      link: "https://uwin-demoday.vercel.app/",
      github: "https://github.com/rahulbhadja/uwin-demoday",
      type: "Nextjs | Tailwindcss | MongoDB",
      image: project1,
    },
    {
      id: 2,
      title: "Q-win event management App",
      link: "https://github.com/ShyamSatasiya/Qwin",
      github: "https://github.com/ShyamSatasiya/Qwin",
      type: "React | Firebase | Firestore",
      image: project2,
    },
    {
      id: 3,
      title: "Online Learning Platform App",
      link: "https://github.com/ShyamSatasiya/E-learn-Django",
      github: "https://github.com/ShyamSatasiya/E-learn-Django",
      type: "Python | Django | Postgres",
      image: project3,
    },
    {
      id: 4,
      title: "Blockchain crypto transaction App",
      link: "https://github.com/ShyamSatasiya/proj-web-3",
      github: "https://github.com/ShyamSatasiya/proj-web-3",
      type: "React | Solidity | Web3",
      image: project4,
    },
    {
      id: 5,
      title: "Shoppers Stop E-commerce App",
      link: "https://github.com/ShyamSatasiya/Shoppers",
      github: "https://github.com/ShyamSatasiya/Shoppers",
      type: "React | Nodejs | Redux | MongoDB",
      image: project5,
    },
    {
      id: 6,
      title: "Food ordering App",
      link: "https://github.com/ShyamSatasiya/foodorderapp",
      github: "https://github.com/ShyamSatasiya/foodorderapp",
      type: "React",
      image: project6,
    },
  ];
}

export default Projects;
